每天都要蹲馬步
====================

軟體開發其時是需要每天練習的，從最小的語法或是大到軟體設計。最基本的當然是程式的語法，API的使用，但是因為現在開發工具越來越方便，所以導致很多人(包含我自己也是)一開始學一個新的語言就開始GOOGLE，也不管為什麼要這樣做，就直接給他貼上去，然後可以用了。殊不知，這樣一來可能到最後自己好像什麼都不會，而且當成是有蟲蟲危機的時候，也找不出來到底是為什麼。

我本身是資訊本科系畢業的，但我有很多同學大學念的卻是數學系。並且，他們寫起程式來都毫不遜色，甚至比很多資訊本科系（當然包含我）的同學還來的厲害。
其實，寫程式本身就是跟數學有很大的關係，只是或多或少而已！
  
舉一個最簡單的例子：我想寫一支可以自動幫我計算油錢的程式（因為油電雙掌，這掌可打的不輕阿，不算一下很容易內傷 ^^”），當使用者輸入所需要的資料後，我就必須要利用程式語言加加減減的幫他計算出他所要的答案。
  
換個例子好了，今天我如果寫一支關於球類的遊戲，當這球掉到地上之後他應該會在反彈起來，那這時候我勢必要知道這球在什麼時間點會到什麼位置，會反彈的多高，那我勢必需要用到 s = V0t+ 1/2at2 這類的公式…等。所以，當我們學會了怎麼寫程式之後，接下來需要練習的就是邏輯了。
  
有一本書「The Passionate Programmer – Create A Remarkable Career In Software Development」
![][PassionateProgrammer] ![][PassionateProgrammer_chs]
  
對岸有翻譯：叫做「我編程，我快樂-程序員職業規劃之道」（其實我一點都不喜歡這個翻譯的書名，感覺很怪）。裡面有提到很多建議，如果想成唯一為的 Programmer 可以怎麼做，很多都是他的經驗分享。例如：多練習工具的使用、多嘗試不同的API、不要重複造輪子、DRY（Do NOT Repeat Yourself）…等等。是一本薄薄的小品，但是很讚！
![][outlier]
  
超凡與平凡的界線到底在哪裡呢？有一個神奇魔術數字：10000個小時。做任何事情，只要達到10000個小時，你都會變成那個領域的專家。比爾蓋茲在創立微軟時，他就已經達到寫程式10000小時了。有一位美國籍號稱會30多種語言的外籍老師，他也說過學會的秘訣就是：大量句子練習法。你只要念10萬句英文，保證英文很流利。所以，難怪有一個前輩也說，
  
> 變強個關鍵就是每天練習

[PassionateProgrammer]: <https://www.dropbox.com/s/nm7a08da3exsuwc/passnoate_eng.jpg?dl=1>
[PassionateProgrammer_chs]: <https://www.dropbox.com/s/qn0swi9rqq70k6q/passnoate_chs.jpg?dl=1>
[outlier]: <https://www.dropbox.com/s/7w5d324i4xv8gzw/outlier.jpg?dl=1>